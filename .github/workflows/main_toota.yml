# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - Toota

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Debugging step to confirm directory structure after checkout
      - name: List files and directories
        run: ls -R
        # This will help identify where the 'server' directory is located.

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'

      # Modify this step to only try to access 'server' if it actually exists
      - name: Create and start virtual environment
        if: "contains(steps.'List files and directories'.outputs.stdout, 'server')"
        run: |
          cd server
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        if: "contains(steps.'List files and directories'.outputs.stdout, 'server')"
        run: |
          cd server
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Zip artifact for deployment
        if: "contains(steps.'List files and directories'.outputs.stdout, 'server')"
        run: |
          cd server
          zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        if: "contains(steps.'List files and directories'.outputs.stdout, 'server')"
        with:
          name: python-app
          path: |
            server/release.zip
            !server/venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      # Create server directory if it doesn't exist
      - name: Create server directory
        run: mkdir -p server

      - name: Unzip artifact for deployment
        if: "contains(steps.'List files and directories'.outputs.stdout, 'server')"
        run: |
          cd server
          unzip release.zip

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'Toota'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_598317C082D04CCEA9BABEDD8AABBF64 }}

      - name: Run Django app with Gunicorn
        if: "contains(steps.'List files and directories'.outputs.stdout